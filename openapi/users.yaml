openapi: 3.0.0
info:
  title: License Management Dashboard API - Users
  version: 1.0.0
  description: Operations related to users

servers:
  - url: http://localhost:5000
    description: Development server

tags:
  - name: Users
    description: Operations related to users

paths:
  /api/users:
    get:
      summary: Get all users
      description: Retrieve a list of all users
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    role:
                      type: string
                    companyId:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
        '401':
          description: Unauthorized
    post:
      summary: Create a new user
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - companyId
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: john@example.com
                role:
                  type: string
                  example: User
                companyId:
                  type: string
                  example: company123
      responses:
        '201':
          description: Created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  companyId:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
        '409':
          description: User with this email already exists

  /api/users/{id}:
    get:
      summary: Get a user by ID
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  companyId:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
        '404':
          description: User not found
    put:
      summary: Update a user
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Updated Name
                email:
                  type: string
                  format: email
                  example: updated@example.com
                role:
                  type: string
                  example: Admin
                companyId:
                  type: string
                  example: company123
      responses:
        '200':
          description: Updated user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  companyId:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
        '404':
          description: User not found
    delete:
      summary: Delete a user
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '204':
          description: User deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: User not found

  /api/users/by-email/{email}:
    get:
      summary: Get a user by email
      tags:
        - Users
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          description: The user email
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  companyId:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
        '404':
          description: User not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT